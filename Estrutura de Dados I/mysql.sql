Create database if not exists livraria;
Use livraria;
create table if not exists cep
(pk_cep char(08) primary key,
logradouro varchar(50) not null,
bairro varchar(50) not null,
Cidade varchar(50) not null,
estado char(02) not null); 
insert into cep values
('04532002','Rua Bandeira Paulista','Itaim Bibi','São Paulo','SP'),
('20921380','Rua Argentina','São Cristovão','Rio de Janeiro','RJ'), 
('22640020','Avenida Armando Lombardi','Barra da Tijuca','Rio de Janeiro','RJ'), 
('69900324','Rua Rio Grande do Sul','Dom Giocondo','Rio Branco','AC'),
('01418002','Alameda Santos','Cerqueira Cesar', 'São Paulo','SP'), 
('05413010','Rua Henrique Schaumann','Cerqueira César','São Paulo','SP'),
('31140520','Av. Paulista','Bela Vista','São Paulo','SP'),
('01220000','Rua Bento Freitas','Republica','Sao Paulo','SP'), 
('20091902','Rua Da Quitanda','Centro','Rio de Janeiro','RJ'), 
('22270000','Rua Voluntarios da Patria','Botafogo','Rio de Janeiro','RJ'),
('90220180','Rua Comendador Coruja','','Porto Alegre','RS'), 
('22640100','Av. das Américas','Barra da Tijuca','Rio de Janeiro','RJ'), 
('07749500','Rua Esmeraldo Felipe Santiago','Caieiras','São Paulo','SP'), 
('01326010','Rua Rui Barbosa','Bela Vista','Sao Paulo','SP'),
('01254010','Rua Alegrete','Sumaré','São Paulo','SP'),
('01415002','Rua Bela Cintra','Consolacao','Sao Paulo','SP'), 
('04270000','Rua Dr. Mário Vicente','Ipiranga','São Paulo','SP'),
('01325030','Rua Prof. Laerte Ramos de Carvalho','Bela Vista','São Paulo','SP'),
('14806040','Avenida Antonio Deliza','Vila Velosa','Araraquara','SP'),
('06696060','Avenida Portugal','Itaqui','Itapevi','SP'), 
('05051900','Rua Tito','Vila Romana','São Paulo','SP'),
('06276190','Avenida Das Comunicacoes','Industrial Anhanguera','Osasco','SP'), 
('04547005','Rua Gomes de Carvalho','Vila Olímpia','São Paulo','SP'), 
('87013190','Rua Basilio Sautchuk,Vereador','Zona 01','Maringá','PR');

CREATE TABLE IF NOT EXISTS EDITORA (
PK_EDITORA INT AUTO_INCREMENT PRIMARY KEY,
NOME_EDITORA VARCHAR(50) NOT NULL,
CNPJ_EDITORA CHAR(14),
FK_CEP CHAR(08),
NUMERO INT,
COMPLEMENTO VARCHAR(50),
foreign key (fk_cep) references cep(pk_cep));

INSERT INTO EDITORA(NOME_EDITORA, CNPJ_EDITORA,fk_CEP,NUMERO,COMPLEMENTO) 
VALUES
('Grupo Companhia das Letras','55789390000112','04532002',702,'cj 32'),
('Grupo Editorial Record','07115047000140','20921380',171,''),
('Globo Livros', '04067191000160','22640020',205,''),
('Editora Moderna', '62136304003315','69900324',0,''),
('Editora Rocco','42444703000159','69900324',0,''),
('Saraiva Educação','60500139003818','01418002',960,'4º andar'),
('Editora Panda Books','04946820000121','05413010',286, 'cj. 41'),
('Grupo Editorial Autêntica','','31140520', 2073,'Horsa I salas 404-6'),
('Editora Aleph','','01220000',306,'Sala 71'),
('Editora HarperCollins Brasil','','20091902',86,'6 Andar Sala 601'),
('Editora Sextante','02310771000100','22270000',45,''),
('Editora L&PM','','90220180',314,''),
('Editora Intrínseca','','22640100',500,'Bl. 12 - Sala 303'),
('Editora Gente','74514316000138','07749500',35,''),
('Editora FTD', '61186490000157','01326010',156,''),
('Editora Martin Claret','','01254010',62,''),
('Editora Planeta de Livros Brasil','05764236000118','01415002',986,''),
('Grupo Editorial Pensamento','61153532000153','04270000',368,''),
('Editora Antofágica','08463170000467','01325030',133,''),
('Editora Pipoca & Nanquim','27286425000165','14806040',239,'Sala A'),
('Editora Darkside','03796758000176','06696060',46,'Galpao02 do Cli 2 Comp A2'), 
('Editora Melhoramentos','14441880000146','05051900', 479,''), 
('Editora Voo','','06276190',265,'Setor 1 - Mod A-07'),
('Editora Conrad','02588717000121','04547005',1306 ,'11º andar CEP '),
('Editora Viseu','13805697000110','87013190',762,'Slj Sala 09');


Create table if not exists livro (
Pk_livro int auto_increment primary key,
Titulo_livro varchar(50) unique not null);

insert into livro(Titulo_livro) values 
('O banquete'),
('As viagens de Gulliver'),
('O corcunda de Notre Dame'),
('Um conto de Natal'),
('Histórias extraordinárias'),
('Moby Dick'),
('Madame Bovary'),
('Morte no Nilo'),
('Memórias de Adriano'), 
('Incidente em Antares'),
('A revolução dos bichos'), 
('A peste'), 
('Clara dos Anjos'),
('On the road'), 
('Crônica da casa assassinada'),
('Quarto de despejo'), 
('Um homem só'), 
('Felicidade clandestina'), 
('Carrie, a estranha'), 
('Bagagem'), 
('Terra sonâmbula'),
('O sol na cabeça'), 
('Te vejo na final'), 
('Odisseia e Ilíada'), 
('A arte da guerra'), 
('Medeia'),
('Édipo Rei'),
('Kama Sutra'), 
('Confissões'),
('Inferno'), 
('O príncipe'),
('Ensaios'),
('Romeu e Julieta'),
('Sonetos de amor'),
('Dom Quixote'),
('Robinson Crusoé'),
('Cândido'),
('Do contrato social'),
('Os sofrimentos do jovem Werther'),
('120 dias de Sodoma'),
('Orgulho e preconceito'),
('Frankenstein'),
('O vermelho e o negro'),
('O conde de Monte Cristo'),
('O corvo'),
('Jane Eyre'),
('O morro dos ventos uivantes'), 
('Manifesto do Partido Comunist'), 
('A letra escarlate'), 
('David Copperfield'), 
('12 anos de escravidão'), 
('Úrsula'),
('Os miseráveis'),
('Viagem ao centro da Terra'),
('Alice no País das Maravilhas'),
('Iracema'),
('Mulherzinhas'),
('O idiota'),
('Anna Kariênina'),
('O primo Basílio'),
('As aventuras de Pinóquio'),
('O médico e o monstro'),
('Um estudo em vermelho'),
('O ateneu'),
('O retrato de Dorian Grey'),
('Mowgli'),
('A máquina do tempo'),
('Drácula'),
('Dom Casmurro'),
('A falência'),
('Pedro Coelho'),
('Os sertões'),
('Rei Arthur e os cavaleiros da Távola Redonda'),
('O lobo do mar'),
('Peter Pan e Wendy'),
('O ladrão de casaca'),
('Triste fim de Policarpo Quaresma'),
('Para o lado de Swann'), 
('Totem e tabu'),
('A metamorfose'),
('A época da inocência'),
('Ulysses'),
('Mrs. Dalloway'); 

create table if not exists autor (
pk_autor int auto_increment primary key,
nome_autor varchar(50) not null unique);

insert into autor(nome_autor) values 
('Platão'),
('Jonathan Swift'),
('Johann Wolfgang von Goethe'),
('Mary Shelley'),
('Victor Hugo'),
('Charles Dickens'),
('Edgar Allan Poe'),
('Herman Melville'),
('Gustave Flaubert'),
('Charles Baudelaire'),
('José de Alencar'),
('Machado de Assis'),
('Arthur Conan Doyle'),
('Pagu'),
('Agatha Christie'),
('George Orwell'),
('Albert Camus'),
('Lima Barreto'),
('Marguerite Yourcenar'),
('Erico Verissimo'),
('Jack Kerouac'),
('Lúcio Cardoso'),
('Carolina Maria de Jesus'),
('Christopher Isherwood'),
('Clarice Lispector'),
('Stephen King'),
('Adélia Prado'),
('Mia Couto'),
('Geovane Martins'),
('Ayslan Monteiro'),
('Homero'),
('Sun Tzu') ,
('Eurípedes'),
('Sófocles'),
('Mallanaga Vatsyayana'), 
('Santo Agostinho'),
('Dante Alighieri'),
('Maquiavel') ,
('Montaigne'),
('William Shakespeare'),
('Luís Vaz de Camões'),
('Miguel de Cervantes'),
('Daniel Defoe'),
('Jonathan Swift1'),
('Voltaire'),
('Jean-Jacques Rousseau'),
('Wolfgang von Goethe'),
('Marquês de Sade'),
('Jane Austen'),
('Mary Shelley '),
('Stendhal'),
('Alexandre Dumas') ,
('Edgar Allan Poe1'),
('Charlotte Brontë'),
('Emily Brontë'),
('Karl Marx'),
('Friedrich Engels'),
('Nathaniel Hawthorne'),
('Charles Dickens1'),
('Herman Melville1'),
('Solomon Northup') ,
('Gustave Flaubert1') ,
('Maria Firmina dos Reis'),
('Victor Hugo'),
('Jules Verne'),
('Lewis Carroll'),
('José de Alencar'),
('Louisa May Alcott'),
('Fiódor Dostoiévski'),
('Liev Tolstói'),
('Eça de Queirós'),
('Carlo Collodi'),
('Robert Louis Stevenson'),
('Arthur Conan Doyle'),
('Raul Pompeia'),
('Oscar Wilde'),
('Rudyard Kipling'),
('H. G. Wells '),
('Bram Stocker') ,
('Machado de Assis'),
('JúliaLopes de Almeida'),
('Beatrix Potter'),
('Euclides da Cunha'),
('Howard Pile'),
('Jack London'),
('J. M. Barrie'),
('Maurice Leblanc'),
('Lima Barreto'),
('Marcel Proust') ,
('Sigmund Freud'),
('Franz Kafka'),
('Edith Wharton'),
('James Joyce'),
('Virginia Woolf');

CREATE TABLE IF NOT EXISTS CATEGORIA (
PK_CATEGORIA INT AUTO_INCREMENT PRIMARY KEY,
DESC_CATEGORIA VARCHAR(50) NOT NULL);
INSERT INTO categoria(DESC_categoria) VALUES 
('Romance'),
('Conto'),
('Novela'),
('Crônica'),
('Fabula'),
('Epopeia'),
('Comédia'),
('Drama'),
('Filosofia'),
('Ficção'),
('Terror'),
('Suspense'),
('Tratado militar'),
('Tragédia'),
('Erótico'),
('Autobiografia'),
('Sátira'),
('Tratado político'),
('Memórias'),
('Infantil');
create table if not exists enquadra (
fk_livro int not null,
fk_categoria int not null,
primary key (fk_livro, fk_categoria),
foreign key (fk_livro) references livro(pk_livro),
foreign key (fk_categoria) references categoria(pk_categoria));
insert into enquadra(fk_livro,fk_categoria) values
(1, 9),
(2, 10),
(3, 1),
(4, 3),
(5, 11),
(5, 12),
(6, 6),
(7, 1),
(8, 1),
(9, 19),
(10, 1),
(11, 5),
(17, 17),
(13, 1),
(14, 19),
(15, 1),
(16, 19),
(17, 2),
(18, 2),
(19, 11),
(20, 4),
(21, 1),
(22, 2),
(23, 1),
(24, 6),
(25, 13),
(26, 14),
(27, 14),
(28, 15),
(29, 16),
(30, 6),
(31, 18),
(32, 9),
(33, 7),
(34, 14),
(35, 1),
(36, 1),
(37, 17),
(38, 18),
(39, 1),
(40, 15),
(41, 1),
(42, 11),
(43, 1),
(44, 1),
(45, 11),
(46, 1),
(47, 1),
(48, 18),
(49, 1),
(50, 1),
(51, 19),
(52, 1),
(53, 1),
(54, 1),
(55, 20),
(56, 1),
(57, 1),
(58, 1),
(59, 1),
(60, 1),
(61, 20),
(62, 11),
(63, 12),
(64, 1),
(65, 1),
(66, 20),
(67, 1),
(68, 11),
(69, 1),
(70, 1),
(71, 20),
(72, 1),
(74, 1),
(75, 20),
(76, 12),
(77, 1),
(78, 1),
(79, 18),
(80, 2),
(81, 1),
(82, 1),
(83, 1 );

-- Tabela Tem (ID_Livro, ID_Autor)
create table if not exists tem (
fk_livro int,
fk_autor INT,
primary key(fk_livro,fk_autor),
foreign KEY (fk_livro) references livro(pk_livro),
foreign KEY (fk_autor) references autor(pk_autor));

insert into tem (fk_livro, fk_autor) values
(1, 1),
(2, 2),
(3, 5),
(4, 6),
(5, 7),
(6, 8),
(7, 9),
(8, 15),
(9, 19),
(10, 20),
(11, 16),
(12, 17),
(13, 18),
(14, 21),
(15, 22),
(16, 23),
(17, 24),
(18, 25),
(19, 26),
(20, 27),
(21, 28),
(22, 29),
(23, 30),
(24, 31),
(25, 32),
(26, 33),
(27, 34),
(28, 35),
(29, 36),
(30, 37),
(31, 38),
(32, 39),
(33, 40),
(34, 40),
(35, 41),
(36, 42),
(37, 43),
(38, 44),
(39, 3),
(40, 46),
(41, 47),
(42, 48),
(43, 49),
(44, 50),
(45, 7),
(46, 51),
(47, 52),
(48, 53),
(48, 54),
(49, 55),
(50, 6),
(51, 56),
(52, 57),
(53, 5),
(54, 58),
(55, 59),
(56, 60),
(57, 61),
(58, 62),
(59, 63),
(60, 64),
(61, 65),
(62, 66),
(63, 13),
(64, 67),
(65, 68),
(66, 69),
(67, 70),
(68, 71),
(69, 12),
(70, 72),
(71, 73),
(72, 74),
(73, 75),
(74, 76),
(75, 77),
(76, 78),
(77, 18),
(78, 79),
(79, 80),
(80, 81),
(81, 82),
(82, 83),
(83, 84);

-- Livro-Editora
-- Contém:(ID_Editora, ID_Livro, Edicao, Ano_da_Edicao)
create table if not exists contem (
fk_editora int not null,
fk_livro int not null,
Edicao varchar(15),
Ano_da_edicao varchar(4),
primary key (fk_editora, fk_livro),
foreign key (fk_editora) references editora(pk_editora),
foreign key (fk_livro) references livro(pk_livro));
INSERT INTO CONTEM(FK_LIVRO, FK_EDITORA) VALUES
(1, 16),
(2, 1),
(3, 21),
(4, 16),
(5, 21),
(6, 19),
(7, 1),
(8, 10),
(9, 1),
(10, 1),
(11, 1),
(12, 2),
(13, 1),
(14, 12),
(15, 1),
(16, 1),
(17, 2),
(18, 5),
(19, 21),
(20, 2),
(21, 1),
(22, 1),
(23, 1),
(24, 16),
(25, 12),
(26, 16),
(27, 16),
(28, 16),
(29, 16),
(30, 16),
(31, 16),
(32, 16),
(33, 16),
(34, 16),
(35, 16),
(36, 16),
(37, 16),
(38, 16),
(39, 16),
(40, 12),
(41, 16),
(42, 21),
(43, 16),
(44, 16),
(45, 21),
(46, 16),
(47, 16),
(48, 1),
(49, 1),
(50, 16),
(51, 1),
(52, 1),
(53, 1),
(54, 16),
(55, 16),
(56, 16),
(57, 16),
(58, 16),
(59, 1),
(60, 1),
(61, 16),
(62, 16),
(63, 16),
(64, 16),
(65, 1),
(66, 16),
(67, 16),
(68, 21),
(69, 1),
(70, 16),
(71, 8),
(72, 1),
(73, 16),
(74, 16),
(75, 16),
(76, 16),
(77, 1),
(78, 1),
(79, 1),
(80, 1),
(81, 1),
(82, 1),
(83, 1);

-- Exibir o status das tabelas no banco de dados
show table status;

/*Contando os registros de uma tabela*/ 
select count(*) from autor;
select count(*) from cep;


/*selecionando *livro e depois a tabela*/
select * from livraria.cep;
select * from livraria.enquadra;

-- Agrupar registros de "enquadra" por "fk_categoria" e contar a quantidade de cada categoria
select fk_categoria, count(fk_categoria) from enquadra group by fk_categoria;

-- Juntar as tabelas "categoria" e "enquadra" para mostrar as categorias e suas respectivas contagens
select desc_categoria, 
enquadra.fk_categoria from categoria, 
enquadra where pk_categoria=fk_categoria;

-- Contar a quantidade de livros por categoria
SELECT desc_categoria, COUNT(enquadra.fk_categoria) AS 'Quantidade de livros' 
FROM categoria, enquadra 
WHERE pk_categoria = fk_categoria 
GROUP BY enquadra.fk_categoria 
ORDER BY COUNT(enquadra.fk_categoria);

-- A consulta retorna os títulos dos livros e as descrições das categorias para livros que pertencem às categorias com ID 1 ou 2, 
-- utilizando as tabelas livro, categoria e enquadra.

select Titulo_livro, desc_categoria
from livro, categoria, enquadra
where fk_categoria=pk_categoria and
fk_livro=pk_livro and pk_categoria
in (1,2);


SELECT nome_autor, titulo_livro
FROM autor, livro, tem where pk_autor = fk_autor and pk_livro = fk_livro
ORDER BY nome_autor;





